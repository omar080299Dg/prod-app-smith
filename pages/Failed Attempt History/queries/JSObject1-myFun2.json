{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "myFun2",
    "fullyQualifiedName": "JSObject1.myFun2",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "invalids": [
        "No datasource configuration found. Please configure it and try again."
      ],
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Failed Attempt History",
    "collectionId": "Failed Attempt History_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  try {\n    await unlock.run();\n    showAlert(\"User unlocked!\", \"success\");\n    all_fah.run();\n  } catch (error) {\n    if (unlock.responseMeta.statusCode == \"401 UNAUTHORIZED\" || unlock.responseMeta.statusCode == \"403 FORBIDDEN\") {\n      showModal(\"loginMod\", {});\n    } else if (unlock.responseMeta.statusCode == \"200 OK\") {\n      showAlert(\"Unlock operation done!\", \"success\");\n    } else {\n      showAlert(\"Unlock doesn't work\", \"error\");\n    }\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Failed Attempt History_JSObject1.myFun2",
  "deleted": false,
  "gitSyncId": "6420ce86298b8349e422bead_6420ce87298b8349e422bf7c"
}